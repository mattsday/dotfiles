# alsa-monitor config file
properties = {
}

rules = [
    # an array of matches/actions to evaluate
    {
        # rules for matching a device or node. It is an array of
        # properties that all need to match the regexp. If any of the
        # matches work, the actions are executed for the object.
        matches = [
            {
	        # this matches all cards
                device.name = ~alsa_card.*
            }
        ]
        actions = {
            # actions can update properties on the matched object.
            update-props = {
                api.alsa.use-acp = 		true
                #api.alsa.use-ucm = 		true
                #api.alsa.soft-mixer = 		false
                #api.alsa.ignore-dB = 		false
                #device.profile-set = 		"profileset-name"
                #device.profile = 		"default profile name"
                #api.acp.auto-port = 		true
                #api.acp.auto-profile = 	true
                #device.nick = 			"My Device"
            }
        }
    }
    {
        matches = [
            {
                node.name = "alsa_output.usb-C-Media_Electronics_Inc._USB_Audio_Device-00.analog-stereo"
            }
        ]
        actions = {
            update-props = {
                node.nick = "USB Audio"
                node.description = "USB Audio"
		        priority.session = 2000
            }
        }
    }
    {
        matches = [
            {
                node.name = "alsa_output.pci-0000_00_1f.3.analog-stereo"
            }
            {
                node.name = "alsa_input.pci-0000_00_1f.3.analog-stereo"
            }
        ]
        actions = {
            update-props = {
                node.nick = "Built-in Audio"
                node.description = "Built-in Audio"
		        priority.session = 2000
            }
        }
    }
    {
        matches = [
            {
                node.name = "alsa_input.usb-0b0e_Jabra_Link_370_70BF927113E0-00.mono-fallback"
            }
        ]
        actions = {
            update-props = {
		        priority.session = 2000
            }
        }
    }
    {
        matches = [
            {
                node.name = "alsa_input.usb-0b0e_Jabra_Link_370_70BF927113E0-00.mono-fallback"
            }
        ]
        actions = {
            update-props = {
                # High priority in general for audio capture
		        priority.session = 2000
            }
        }
    }
    {
        matches = [
            {
                node.name = "alsa_output.usb-0b0e_Jabra_Link_370_70BF927113E0-00.analog-stereo"
            }
        ]
        actions = {
            update-props = {
                # Lower priority for audio playback
                priority.session = 1500
            }
        }
    }
    {
        matches = [
            {
                node.name = "alsa_output.usb-0b0e_Jabra_Link_370_70BF927113E0-00.analog-stereo"
            }
            {
                node.name = "alsa_input.usb-0b0e_Jabra_Link_370_70BF927113E0-00.mono-fallback"
            }
        ]
        actions = {
            update-props = {
                node.nick = "Jabra Evolve 370 Headset"
                node.description = "Jabra Evolve 370 Headset"
            }
        }
    }
    {
        matches = [
            {
                node.name = "alsa_output.usb-0b0e_Jabra_SPEAK_510_USB_501AA57E1990020A00-00.analog-stereo"
            }
            {
                node.name = "alsa_input.usb-0b0e_Jabra_SPEAK_510_USB_501AA57E1990020A00-00.mono-fallback"
            }
        ]
        actions = {
            update-props = {
                node.nick = "Jabra Speak 510"
                node.description = "Jabra Speak 510"
                # Make 2nd favourite after USB for output
                priority.session = 1900
            }
        }
    }
    {
        matches = [
            {
	        # matches all sinks
                node.name = ~alsa_input.*
            }
            {
	        # matches all sources
                node.name = ~alsa_output.*
            }
        ]
        actions = {
            update-props = {
                #node.nick = 			"My Node"
                #node.nick = 			null
                #priority.driver = 		100
                #priority.session = 		100
                #resample.quality = 		4
                #channelmix.normalize =		false
                #channelmix.mix-lfe = 		false
                #audio.format = 		"S16LE"
                #audio.rate = 			44100
                #audio.position = 		"FL,FR"
            }
        }
    }
]

