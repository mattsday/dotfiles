#!/bin/sh
# Update the running system, whatever we're running

_sudo() {
	if command -v id >/dev/null 2>&1 && [ "$(id -u)" != 0 ] && command -v sudo >/dev/null 2>&1; then
		sudo "$@"
	else
		"$@"
	fi
}

if [ -f "${HOME}/.sdkman/bin/sdkman-init.sh" ]; then
	. "${HOME}/.sdkman/bin/sdkman-init.sh"
fi

# Debian-based
if [ -x /usr/bin/apt ] && [ -x /usr/bin/dpkg ]; then
	DEBIAN_FRONTEND=noninteractive _sudo apt update && DEBIAN_FRONTEND=noninteractive _sudo apt full-upgrade
# Arch-based
elif [ -x /usr/bin/pacman ]; then
	# Arch linux use yay if it's there
	if [ -x /usr/bin/yay ]; then
		yay -Syu
	else
		_sudo pacman -Syu
	fi
# Fedora-based
elif [ -x /usr/bin/dnf ]; then
	_sudo dnf update
# Red Hat-based
elif [ -x /usr/bin/yum ]; then
	_sudo yum update
# OpenBSD
elif [ -x /usr/sbin/pkg_add ]; then
	_sudo pkg_add -uvi
# FreeBSD
elif [ -x /usr/sbin/pkg ]; then
	_sudo pkg update && _sudo pkg upgrade
# SuSE
elif [ -x /usr/bin/zypper ]; then
	_sudo zypper refresh && _sudo zypper dup
# OS X
elif [ -x /opt/local/bin/port ]; then
	_sudo /opt/local/bin/port -q selfupdate
	_sudo /opt/local/bin/port -q upgrade outdated
elif [ -x /usr/local/bin/brew ]; then
	brew update
	brew upgrade
	brew cleanup
	brew doctor
fi
# If there are any callbacks process them
if [ -n "${_UPDATE_CALLBACKS}" ]; then
	IFS=":"
	for i in ${_UPDATE_CALLBACKS}; do
		unset IFS
		eval "${i}"
	done
fi
