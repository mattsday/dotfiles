# This file contains alias definitions and variables that are common 
# between both zsh and bash... rather than maintain two sets, both 
# rcfiles load this
# Latest copy always here: https://github.com/mattsday/dotfiles/

# Set some local utilities as default (this must be top of this file)
if [[ -d /usr/local/bin ]]; then
	# Affix /usr/local/bin to PATH as homebrew zsh doesn't do this for some
	# reason
	export PATH=/usr/local/bin:$PATH

	# Create an update alias if homebrew is installed
	if [[ -x /usr/local/bin/brew ]]; then
		alias update="brew update && brew upgrade --all; brew upgrade \
			wine --devel 2>/dev/null; brew cleanup; brew doctor"
	fi
fi

# If running on OS X check for coreutils and use them with colour
if [[ -x /usr/local/bin/gls ]]; then
	alias ls='/usr/local/bin/gls --color=auto'
# Otherwise check if /usr/bin/dircolors exists which is a good sign it's GNU ls
elif [[ -x /usr/bin/dircolors ]]; then
	alias ls='ls --color=auto'
fi

# =================
# Alias definitions
# =================
# Check the presence of various utilities and alias them to give them
# preference ahead of lesser system defaults

# Prefer nvim over vim if its config file exists as well
if [[ -x $(which nvim 2> /dev/null) && -d $HOME/.config/nvim ]]; then
	export VISUAL=$(which nvim)
	export USE_EDITOR=$VISUAL
	export EDITOR=$VISUAL
	alias vi=$VISUAL
# ...vim is second best
elif [[ -x $(which vim 2> /dev/null) ]]; then
	export VISUAL=$(which vim)
	export USE_EDITOR=$VISUAL
	export EDITOR=$VISUAL
	# Some systems are cruel and have vi + vim installed side-by-side
	alias vi=$VISUAL
fi

# Set less as the default pager
if [[ -x $(which less 2> /dev/null) ]]; then
	export PAGER=$(which less)
fi

# If we can sudo dodo!
if [[ -x /usr/bin/sudo ]]; then
	# Debian based systems
	if [[ -x /usr/bin/apt-get ]]; then
		# I prefer aptitude over apt-get but muscle memory sucks
		if [[ -x /usr/bin/aptitude ]]; then
			alias aptitude='sudo aptitude'
			alias apt-get='aptitude'
			alias apt-cache="aptitude -F '%1p %40d# (%C) %D %10V'"
		else
			alias apt-get='sudo apt-get'
		fi
		alias update='apt-get update && apt-get upgrade'
	fi
	# Same if using RPM-based distributions
	if [[ -x /usr/bin/yum ]]; then
		alias yum='sudo yum'
		alias update='yum update'
	fi
	# Always restart services as root
	if [[ -x /usr/sbin/service ]]; then
		alias service='sudo service'
	fi
fi

# Colour grep output
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
export GREP_COLORS="ms=01;32:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36"

# Meh, shit happens:
alias 'cd..=cd ..'
alias 'cd~=cd ~'

# Common shortcuts
alias ll='ls -lah'
alias l='ls -aCF'
alias l.='ls -d .*'

# =====================
# Environment variables
# =====================
# These affect most systems and are (usually) harmless if run without...

# Sets ls and various commands to use yyyy-mm-dd as the date format
export TIME_STYLE="long-iso"

# OS X ls colouring (non-gnu ls)
export CLICOLOR="yes"
export LSCOLORS="gxhxfxcxcxdxcxcxcxgxgx"

# Check if docker-machine exists, if there's a 'dev' one defined and it's
# running... if so grab its environment variables
if [[ -x $(which docker-machine 2> /dev/null) ]]; then
	if [[ -d $HOME/.docker/machine/machines/dev ]]; then
		[[ "$(docker-machine status dev 2>/dev/null)" == "Running" ]] \
		&& eval $(docker-machine env dev)
	fi
fi

# Do we need to load proxy settings?
if [[ -f $HOME/.enable_proxy ]]; then
	[[ -f $HOME/.proxy_settings ]] && source $HOME/.proxy_settings
fi


# vim: syntax=zsh
