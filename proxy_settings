#!/bin/sh
# This file loads the Cisco proxy settings.
# Latest copy always here: https://github.com/mattsday/dotfiles/

# Use same proxy host for all protocols
export proxy=http://proxy.esl.cisco.com:80/
export http_proxy=$proxy
export https_proxy=$proxy
export ftp_proxy=$proxy
export PROXY=$proxy
export HTTP_PROXY=$proxy
export HTTPS_PROXY=$proxy
export FTP_PROXY=$proxy

# Try jot, then seq and if all else fails just loop
ip_sequence() {
	if command -v jot > /dev/null 2>&1; then
		jot -s , -w $1.%d 256 0 256
	elif command -v seq > /dev/null 2>&1; then
		seq -f "$1.%g" -s "," 0 255 | sed 's/.$//'
	else
		i=0
		while [ "$i" -le 255 ]; do
			echo -n "$1.$i,"
			let i+=1
		done
	fi
}

# Whitelist common lab ranges
CORP_A_WHITELIST=`ip_sequence 10.52.208`
CORP_B_WHITELIST=`ip_sequence 10.51.8`

# Frontend/App/Backend whitelists
FE_WHITELIST=`ip_sequence 192.168.210`
APP_WHITELIST=`ip_sequence 192.168.211`
BE_WHITELIST=`ip_sequence 192.168.212`

# Common OpenStack subnet whitelist
OS_WHITELIST=`ip_sequence 10.0.0`

export no_proxy=".cisco.com,127.0.0.1,localhost,local.home,0.0.0.0,$CORP_A_WHITELIST,$CORP_B_WHITELIST,$FE_WHITELIST,$APP_WHITELIST,$BE_WHITELIST,$OS_WHITELIST"
export NO_PROXY=$no_proxy

unset -f ip_sequence

# vim: syntax=sh
