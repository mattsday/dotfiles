#!/bin/sh
# This file automatically generates proxy settings for each shell
# It can either be sourced (. ~/.update_proxy) or run as a command
# (~/.update_proxy write) - the latter will cause it to create csh files
# too

# Full proxy server
proxy="http://proxy.esl.cisco.com:80/"

# Comma separated list of hosts to ignore
ignore_hosts="cisco.com, 169.254.169.254, .cisco.com, 127.0.0.1, localhost, local.home, 0.0.0.0"

# Comma separted list of IP prefixes to ignore in CIDR notation
# Note only /24 is supported today
ignore_prefixes="10.0.0.0/24, 10.52.208.0/24, 10.51.8.0/24"

ip_sequence() {
	if command -v jot > /dev/null 2>&1; then
		jot -s , -w $1%d 256 0 256
	elif command -v seq > /dev/null 2>&1; then
		seq -f "$1%g" -s , 0 255 | sed 's/,$//'
	else
		i=0
		while [ "$i" -le 255 ]; do
			buffer="$buffer$1$i,"
			i=`expr $i + 1`
		done
		echo $buffer | sed 's/,$//'
	fi
}

unset no_proxy

IFS=,
for prefix in $ignore_prefixes; do
	# Calculate addresses; only support /8, /16 and /24
	size=`echo $prefix | awk -F/ '{ print $2 }' | xargs`
	prefix=`echo $prefix | awk -F. '{ print $1"."$2"."$3"." }' | xargs`
	no_proxy=$no_proxy,`ip_sequence $prefix`
done
for host in $ignore_hosts; do
	no_proxy=`echo $host | xargs`,$no_proxy
done
unset IFS

# Test if the settings need to be written out or simply sourced at runtime
# Assume a command argument is passed to write out
if [ -z $1 ]; then
	http_proxy=$proxy
	https_proxy=$proxy
	ftp_proxy=$proxy
	PROXY=$proxy
	HTTP_PROXY=$proxy
	HTTPS_PROXY=$proxy
	FTP_PROXY=$proxy
	NO_PROXY=$no_proxy
	export proxy http_proxy https_proxy ftp_proxy no_proxy
	export PROXY HTTP_PROXY HTTPS_PROXY FTP_PROXY NO_PROXY
else
	csh_file="$HOME/.csh_proxy_settings"
	sh_file="$HOME/.sh_proxy_settings"
	rm $sh_file >/dev/null 2>&1
	rm $csh_file >/dev/null 2>&1

	cat <<EOT > $sh_file
# Bourne shell proxy settings
#
# This file is auto-generated by running the script
# \`$HOME/.update_proxy update\`
# Last updated: `date`

http_proxy="$proxy"
https_proxy="$proxy"
ftp_proxy="$proxy"
PROXY="$proxy"
HTTP_PROXY="$proxy"
HTTPS_PROXY="$proxy"
FTP_PROXY="$proxy"
no_proxy="$no_proxy"
NO_PROXY="\$no_proxy"
export proxy http_proxy https_proxy ftp_proxy no_proxy
export PROXY HTTP_PROXY HTTPS_PROXY FTP_PROXY NO_PROXY
EOT

cat <<EOT > $csh_file
# csh and tcsh proxy settings
#
# This file is auto-generated by running the script
# \`$HOME/.update_proxy update\`
# Last updated: `date`

# Use same proxy host for all protocols
setenv proxy "$proxy"
setenv http_proxy "$proxy"
setenv https_proxy "$proxy"
setenv ftp_proxy "$proxy"
setenv PROXY "$proxy"
setenv HTTP_PROXY "$proxy"
setenv HTTPS_PROXY "$proxy"
setenv FTP_PROXY "$proxy"
if ( \$?tcsh ) then
	set tcsh_version = \`echo \$tcsh | awk -F. '{print \$1\$2}'\`
	if ( \$tcsh_version > 614 ) then
		setenv no_proxy "$no_proxy"
		setenv NO_PROXY "\$no_proxy"
	endif
endif

EOT
fi
